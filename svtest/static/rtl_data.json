{
  "c:\\Users\\huijie\\Desktop\\graphrag\\AF_workflow\\../svtest\\pre_rtl\\apb.v": {
    "modules": [
      {
        "name": "apb",
        "lineno": 2,
        "ast": "ModuleDef",
        "startline": 2,
        "endline": 2
      }
    ],
    "ports": [
      {
        "name": "PCLK",
        "lineno": 3,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 3,
        "endline": 3,
        "parent_module": "apb"
      },
      {
        "name": "PRESETn",
        "lineno": 4,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 4,
        "endline": 4,
        "parent_module": "apb"
      },
      {
        "name": "PSELx",
        "lineno": 5,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 5,
        "endline": 5,
        "parent_module": "apb"
      },
      {
        "name": "PWRITE",
        "lineno": 6,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 6,
        "endline": 6,
        "parent_module": "apb"
      },
      {
        "name": "PENABLE",
        "lineno": 7,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 7,
        "endline": 7,
        "parent_module": "apb"
      },
      {
        "name": "PADDR",
        "lineno": 8,
        "direction": "input",
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 8,
        "endline": 8,
        "parent_module": "apb"
      },
      {
        "name": "PWDATA",
        "lineno": 9,
        "direction": "input",
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 9,
        "endline": 9,
        "parent_module": "apb"
      },
      {
        "name": "READ_DATA_ON_RX",
        "lineno": 10,
        "direction": "input",
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 10,
        "endline": 10,
        "parent_module": "apb"
      },
      {
        "name": "ERROR",
        "lineno": 11,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 11,
        "endline": 11,
        "parent_module": "apb"
      },
      {
        "name": "TX_EMPTY",
        "lineno": 12,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 12,
        "endline": 12,
        "parent_module": "apb"
      },
      {
        "name": "RX_EMPTY",
        "lineno": 13,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 13,
        "endline": 13,
        "parent_module": "apb"
      },
      {
        "name": "PRDATA",
        "lineno": 14,
        "direction": "output",
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 14,
        "endline": 14,
        "parent_module": "apb"
      },
      {
        "name": "INTERNAL_I2C_REGISTER_CONFIG",
        "lineno": 15,
        "direction": "output",
        "msb": "13",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 15,
        "endline": 15,
        "parent_module": "apb"
      },
      {
        "name": "INTERNAL_I2C_REGISTER_TIMEOUT",
        "lineno": 16,
        "direction": "output",
        "msb": "13",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 16,
        "endline": 16,
        "parent_module": "apb"
      },
      {
        "name": "WRITE_DATA_ON_TX",
        "lineno": 17,
        "direction": "output",
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 17,
        "endline": 17,
        "parent_module": "apb"
      },
      {
        "name": "WR_ENA",
        "lineno": 18,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 18,
        "endline": 18,
        "parent_module": "apb"
      },
      {
        "name": "RD_ENA",
        "lineno": 19,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 19,
        "endline": 19,
        "parent_module": "apb"
      },
      {
        "name": "PREADY",
        "lineno": 20,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 20,
        "endline": 20,
        "parent_module": "apb"
      },
      {
        "name": "PSLVERR",
        "lineno": 21,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 21,
        "endline": 21,
        "parent_module": "apb"
      },
      {
        "name": "INT_RX",
        "lineno": 22,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 22,
        "endline": 22,
        "parent_module": "apb"
      },
      {
        "name": "INT_TX",
        "lineno": 23,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 23,
        "endline": 23,
        "parent_module": "apb"
      }
    ],
    "signals": [],
    "registers": [
      {
        "name": "INTERNAL_I2C_REGISTER_CONFIG",
        "lineno": 15,
        "msb": "13",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 15,
        "endline": 15,
        "parent_module": "apb"
      },
      {
        "name": "INTERNAL_I2C_REGISTER_TIMEOUT",
        "lineno": 16,
        "msb": "13",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 16,
        "endline": 16,
        "parent_module": "apb"
      }
    ],
    "wires": [],
    "parameters": [],
    "instances": [],
    "assigns": [
      {
        "lineno": 25,
        "left": "WR_ENA",
        "right": "(((((PWRITE == 1'b1) & (PENABLE == 1'b1)) & (PADDR == 32'd0)) & (PSELx == 1'b1)))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 25,
        "endline": 25,
        "parent_module": "apb"
      },
      {
        "lineno": 26,
        "left": "RD_ENA",
        "right": "(((((PWRITE == 1'b0) & (PENABLE == 1'b1)) & (PADDR == 32'd4)) & (PSELx == 1'b1)))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 26,
        "endline": 26,
        "parent_module": "apb"
      },
      {
        "lineno": 27,
        "left": "PREADY",
        "right": "((((((WR_ENA == 1'b1) | (RD_ENA == 1'b1)) | (PADDR == 32'd8)) | (PADDR == 32'd12)) & ((PENABLE == 1'b1) & (PSELx == 1'b1))))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 27,
        "endline": 27,
        "parent_module": "apb"
      },
      {
        "lineno": 28,
        "left": "WRITE_DATA_ON_TX",
        "right": "((PADDR == 32'd0))? PWDATA:PWDATA",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 28,
        "endline": 28,
        "parent_module": "apb"
      },
      {
        "lineno": 29,
        "left": "PRDATA",
        "right": "((PADDR == 32'd4))? READ_DATA_ON_RX:READ_DATA_ON_RX",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 29,
        "endline": 29,
        "parent_module": "apb"
      },
      {
        "lineno": 30,
        "left": "PSLVERR",
        "right": "ERROR",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 30,
        "endline": 30,
        "parent_module": "apb"
      },
      {
        "lineno": 31,
        "left": "INT_TX",
        "right": "TX_EMPTY",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 31,
        "endline": 31,
        "parent_module": "apb"
      },
      {
        "lineno": 32,
        "left": "INT_RX",
        "right": "RX_EMPTY",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 32,
        "endline": 32,
        "parent_module": "apb"
      }
    ],
    "always_blocks": [
      {
        "lineno": 33,
        "senlist": [
          {
            "edge": "posedge",
            "sig": "PCLK"
          }
        ],
        "ast": "Always",
        "startline": 33,
        "endline": 52,
        "logic_type": "sequential",
        "cfg_data": {
          "INTERNAL_I2C_REGISTER_CONFIG": [
            {
              "condition": "!PRESETn",
              "line": 37,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "14'd0"
            },
            {
              "condition": "!(!PRESETn) && ((((PADDR == 32'd8) && (PSELx == 1'b1)) && (PWRITE == 1'b1)) && (PREADY == 1'b1))",
              "line": 44,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "PWDATA[13:0]"
            },
            {
              "condition": "!(!PRESETn) && !(((((PADDR == 32'd8) && (PSELx == 1'b1)) && (PWRITE == 1'b1)) && (PREADY == 1'b1))) && !(((((PADDR == 32'd12) && (PSELx == 1'b1)) && (PWRITE == 1'b1)) && (PREADY == 1'b1)))",
              "line": 52,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "INTERNAL_I2C_REGISTER_CONFIG"
            }
          ],
          "INTERNAL_I2C_REGISTER_TIMEOUT": [
            {
              "condition": "!PRESETn",
              "line": 38,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "14'd0"
            },
            {
              "condition": "!(!PRESETn) && !(((((PADDR == 32'd8) && (PSELx == 1'b1)) && (PWRITE == 1'b1)) && (PREADY == 1'b1))) && ((((PADDR == 32'd12) && (PSELx == 1'b1)) && (PWRITE == 1'b1)) && (PREADY == 1'b1))",
              "line": 48,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "PWDATA[13:0]"
            }
          ]
        },
        "parent_module": "apb"
      }
    ],
    "initial_blocks": [],
    "dataflow": []
  },
  "c:\\Users\\huijie\\Desktop\\graphrag\\AF_workflow\\../svtest\\pre_rtl\\fifo.v": {
    "modules": [
      {
        "name": "fifo",
        "lineno": 2,
        "ast": "ModuleDef",
        "startline": 2,
        "endline": 2
      }
    ],
    "ports": [
      {
        "name": "clock",
        "lineno": 8,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 8,
        "endline": 8,
        "parent_module": "fifo"
      },
      {
        "name": "reset",
        "lineno": 8,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 8,
        "endline": 8,
        "parent_module": "fifo"
      },
      {
        "name": "wr_en",
        "lineno": 8,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 8,
        "endline": 8,
        "parent_module": "fifo"
      },
      {
        "name": "rd_en",
        "lineno": 8,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 8,
        "endline": 8,
        "parent_module": "fifo"
      },
      {
        "name": "data_in",
        "lineno": 9,
        "direction": "input",
        "msb": "(DWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 9,
        "endline": 9,
        "parent_module": "fifo"
      },
      {
        "name": "f_full",
        "lineno": 10,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 10,
        "endline": 10,
        "parent_module": "fifo"
      },
      {
        "name": "f_empty",
        "lineno": 10,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 10,
        "endline": 10,
        "parent_module": "fifo"
      },
      {
        "name": "data_out",
        "lineno": 11,
        "direction": "output",
        "msb": "(DWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 11,
        "endline": 11,
        "parent_module": "fifo"
      }
    ],
    "signals": [],
    "registers": [
      {
        "name": "mem",
        "lineno": 13,
        "msb": "(DWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [
          {
            "msb": "0",
            "lsb": "((2**AWIDTH) - 1)"
          }
        ],
        "value": "None",
        "ast": "Reg",
        "startline": 13,
        "endline": 13,
        "parent_module": "fifo"
      },
      {
        "name": "wr_ptr",
        "lineno": 14,
        "msb": "(AWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 14,
        "endline": 14,
        "parent_module": "fifo"
      },
      {
        "name": "rd_ptr",
        "lineno": 15,
        "msb": "(AWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 15,
        "endline": 15,
        "parent_module": "fifo"
      },
      {
        "name": "counter",
        "lineno": 16,
        "msb": "(AWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 16,
        "endline": 16,
        "parent_module": "fifo"
      }
    ],
    "wires": [
      {
        "name": "wr",
        "lineno": 17,
        "msb": "(AWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 17,
        "endline": 17,
        "parent_module": "fifo"
      },
      {
        "name": "rd",
        "lineno": 18,
        "msb": "(AWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 18,
        "endline": 18,
        "parent_module": "fifo"
      },
      {
        "name": "w_counter",
        "lineno": 19,
        "msb": "(AWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 19,
        "endline": 19,
        "parent_module": "fifo"
      }
    ],
    "parameters": [
      {
        "name": "DWIDTH",
        "lineno": 4,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "32",
        "ast": "Parameter",
        "startline": 4,
        "endline": 4,
        "parent_module": "fifo"
      },
      {
        "name": "AWIDTH",
        "lineno": 5,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "4",
        "ast": "Parameter",
        "startline": 5,
        "endline": 5,
        "parent_module": "fifo"
      }
    ],
    "instances": [],
    "assigns": [
      {
        "lineno": 61,
        "left": "f_full",
        "right": "((counter == 4'd15))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 61,
        "endline": 61,
        "parent_module": "fifo"
      },
      {
        "lineno": 62,
        "left": "f_empty",
        "right": "((counter == 4'd0))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 62,
        "endline": 62,
        "parent_module": "fifo"
      },
      {
        "lineno": 63,
        "left": "wr",
        "right": "((wr_en && !f_full))? (wr_ptr + 4'd1):(wr_ptr + 4'd0)",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 63,
        "endline": 63,
        "parent_module": "fifo"
      },
      {
        "lineno": 64,
        "left": "rd",
        "right": "((rd_en && !f_empty))? (rd_ptr + 4'd1):(rd_ptr + 4'd0)",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 64,
        "endline": 64,
        "parent_module": "fifo"
      },
      {
        "lineno": 65,
        "left": "w_counter",
        "right": "(((rd_en && !f_empty) && !wr_en))? (counter - 4'd1):(((wr_en && !f_full) && !rd_en))? (counter + 4'd1):(w_counter + 4'd0)",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 65,
        "endline": 67,
        "parent_module": "fifo"
      },
      {
        "lineno": 68,
        "left": "data_out",
        "right": "mem[rd_ptr]",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 68,
        "endline": 68,
        "parent_module": "fifo"
      }
    ],
    "always_blocks": [
      {
        "lineno": 20,
        "senlist": [
          {
            "edge": "posedge",
            "sig": "clock"
          }
        ],
        "ast": "Always",
        "startline": 20,
        "endline": 29,
        "logic_type": "sequential",
        "cfg_data": {
          "wr_ptr": [
            {
              "condition": "reset",
              "line": 24,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "{AWIDTH{{1'b0}}}"
            },
            {
              "condition": "!(reset) && (wr_en && !f_full)",
              "line": 29,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "wr"
            }
          ],
          "mem[wr_ptr]": [
            {
              "condition": "!(reset) && (wr_en && !f_full)",
              "line": 28,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "data_in"
            }
          ]
        },
        "parent_module": "fifo"
      },
      {
        "lineno": 32,
        "senlist": [
          {
            "edge": "posedge",
            "sig": "clock"
          }
        ],
        "ast": "Always",
        "startline": 32,
        "endline": 40,
        "logic_type": "sequential",
        "cfg_data": {
          "rd_ptr": [
            {
              "condition": "reset",
              "line": 36,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "{AWIDTH{{1'b0}}}"
            },
            {
              "condition": "!(reset) && (rd_en && !f_empty)",
              "line": 40,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "rd"
            }
          ]
        },
        "parent_module": "fifo"
      },
      {
        "lineno": 43,
        "senlist": [
          {
            "edge": "posedge",
            "sig": "clock"
          }
        ],
        "ast": "Always",
        "startline": 43,
        "endline": 57,
        "logic_type": "sequential",
        "cfg_data": {
          "counter": [
            {
              "condition": "reset",
              "line": 47,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "{AWIDTH{{1'b0}}}"
            },
            {
              "condition": "!(reset) && ((rd_en && !f_empty) && !wr_en)",
              "line": 53,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "w_counter"
            },
            {
              "condition": "!(reset) && !(((rd_en && !f_empty) && !wr_en)) && ((wr_en && !f_full) && !rd_en)",
              "line": 57,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "w_counter"
            }
          ]
        },
        "parent_module": "fifo"
      }
    ],
    "initial_blocks": [],
    "dataflow": []
  },
  "c:\\Users\\huijie\\Desktop\\graphrag\\AF_workflow\\../svtest\\pre_rtl\\i2c.v": {
    "modules": [
      {
        "name": "i2c",
        "lineno": 2,
        "ast": "ModuleDef",
        "startline": 2,
        "endline": 2
      }
    ],
    "ports": [
      {
        "name": "PCLK",
        "lineno": 3,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 3,
        "endline": 3,
        "parent_module": "i2c"
      },
      {
        "name": "PRESETn",
        "lineno": 4,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 4,
        "endline": 4,
        "parent_module": "i2c"
      },
      {
        "name": "PADDR",
        "lineno": 5,
        "direction": "input",
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 5,
        "endline": 5,
        "parent_module": "i2c"
      },
      {
        "name": "PWDATA",
        "lineno": 6,
        "direction": "input",
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 6,
        "endline": 6,
        "parent_module": "i2c"
      },
      {
        "name": "PWRITE",
        "lineno": 7,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 7,
        "endline": 7,
        "parent_module": "i2c"
      },
      {
        "name": "PSELx",
        "lineno": 8,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 8,
        "endline": 8,
        "parent_module": "i2c"
      },
      {
        "name": "PENABLE",
        "lineno": 9,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 9,
        "endline": 9,
        "parent_module": "i2c"
      },
      {
        "name": "PREADY",
        "lineno": 10,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 10,
        "endline": 10,
        "parent_module": "i2c"
      },
      {
        "name": "PSLVERR",
        "lineno": 11,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 11,
        "endline": 11,
        "parent_module": "i2c"
      },
      {
        "name": "INT_RX",
        "lineno": 12,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 12,
        "endline": 12,
        "parent_module": "i2c"
      },
      {
        "name": "INT_TX",
        "lineno": 13,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 13,
        "endline": 13,
        "parent_module": "i2c"
      },
      {
        "name": "PRDATA",
        "lineno": 14,
        "direction": "output",
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 14,
        "endline": 14,
        "parent_module": "i2c"
      },
      {
        "name": "SDA_ENABLE",
        "lineno": 15,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 15,
        "endline": 15,
        "parent_module": "i2c"
      },
      {
        "name": "SCL_ENABLE",
        "lineno": 16,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 16,
        "endline": 16,
        "parent_module": "i2c"
      },
      {
        "name": "SDA",
        "lineno": 17,
        "direction": "inout",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Inout",
        "startline": 17,
        "endline": 17,
        "parent_module": "i2c"
      },
      {
        "name": "SCL",
        "lineno": 18,
        "direction": "inout",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Inout",
        "startline": 18,
        "endline": 18,
        "parent_module": "i2c"
      }
    ],
    "signals": [],
    "registers": [],
    "wires": [
      {
        "name": "RESET_N",
        "lineno": 20,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 20,
        "endline": 20,
        "parent_module": "i2c"
      },
      {
        "name": "TX_RD_EN",
        "lineno": 22,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 22,
        "endline": 22,
        "parent_module": "i2c"
      },
      {
        "name": "TX_F_EMPTY",
        "lineno": 23,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 23,
        "endline": 23,
        "parent_module": "i2c"
      },
      {
        "name": "TX_F_FULL",
        "lineno": 24,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 24,
        "endline": 24,
        "parent_module": "i2c"
      },
      {
        "name": "TX_DATA_IN",
        "lineno": 25,
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 25,
        "endline": 25,
        "parent_module": "i2c"
      },
      {
        "name": "TX_DATA_OUT",
        "lineno": 26,
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 26,
        "endline": 26,
        "parent_module": "i2c"
      },
      {
        "name": "TX_WRITE_ENA",
        "lineno": 27,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 27,
        "endline": 27,
        "parent_module": "i2c"
      },
      {
        "name": "RX_RD_EN",
        "lineno": 28,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 28,
        "endline": 28,
        "parent_module": "i2c"
      },
      {
        "name": "RX_F_EMPTY",
        "lineno": 29,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 29,
        "endline": 29,
        "parent_module": "i2c"
      },
      {
        "name": "RX_F_FULL",
        "lineno": 30,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 30,
        "endline": 30,
        "parent_module": "i2c"
      },
      {
        "name": "RX_DATA_IN",
        "lineno": 31,
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 31,
        "endline": 31,
        "parent_module": "i2c"
      },
      {
        "name": "RX_DATA_OUT",
        "lineno": 32,
        "msb": "31",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 32,
        "endline": 32,
        "parent_module": "i2c"
      },
      {
        "name": "RX_WRITE_ENA",
        "lineno": 33,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 33,
        "endline": 33,
        "parent_module": "i2c"
      },
      {
        "name": "REGISTER_CONFIG",
        "lineno": 34,
        "msb": "13",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 34,
        "endline": 34,
        "parent_module": "i2c"
      },
      {
        "name": "TIMEOUT_CONFIG",
        "lineno": 35,
        "msb": "13",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 35,
        "endline": 35,
        "parent_module": "i2c"
      },
      {
        "name": "error",
        "lineno": 36,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 36,
        "endline": 36,
        "parent_module": "i2c"
      },
      {
        "name": "tx_empty",
        "lineno": 37,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 37,
        "endline": 37,
        "parent_module": "i2c"
      },
      {
        "name": "rx_empty",
        "lineno": 38,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 38,
        "endline": 38,
        "parent_module": "i2c"
      },
      {
        "name": "w_full",
        "lineno": 39,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Wire",
        "startline": 39,
        "endline": 39,
        "parent_module": "i2c"
      }
    ],
    "parameters": [],
    "instances": [
      {
        "lineno": 40,
        "module_name": "fifo",
        "instance_name": "DUT_FIFO_TX",
        "port_connections": [
          {
            "portname": "clock",
            "argname": "PCLK"
          },
          {
            "portname": "reset",
            "argname": "RESET_N"
          },
          {
            "portname": "wr_en",
            "argname": "TX_WRITE_ENA"
          },
          {
            "portname": "rd_en",
            "argname": "TX_RD_EN"
          },
          {
            "portname": "data_in",
            "argname": "TX_DATA_IN"
          },
          {
            "portname": "f_full",
            "argname": "w_full"
          },
          {
            "portname": "f_empty",
            "argname": "TX_F_EMPTY"
          },
          {
            "portname": "data_out",
            "argname": "TX_DATA_OUT"
          }
        ],
        "parameter_connections": [],
        "arrays": {
          "msb": 0,
          "lsb": 0
        },
        "ast": "Instance",
        "startline": 40,
        "endline": 48,
        "parent_module": "i2c"
      },
      {
        "lineno": 51,
        "module_name": "fifo",
        "instance_name": "DUT_FIFO_RX",
        "port_connections": [
          {
            "portname": "clock",
            "argname": "PCLK"
          },
          {
            "portname": "reset",
            "argname": "RESET_N"
          },
          {
            "portname": "wr_en",
            "argname": "RX_WRITE_ENA"
          },
          {
            "portname": "rd_en",
            "argname": "RX_RD_EN"
          },
          {
            "portname": "data_in",
            "argname": "RX_DATA_IN"
          },
          {
            "portname": "f_full",
            "argname": "RX_F_FULL"
          },
          {
            "portname": "f_empty",
            "argname": "RX_F_EMPTY"
          },
          {
            "portname": "data_out",
            "argname": "RX_DATA_OUT"
          }
        ],
        "parameter_connections": [],
        "arrays": {
          "msb": 0,
          "lsb": 0
        },
        "ast": "Instance",
        "startline": 51,
        "endline": 59,
        "parent_module": "i2c"
      },
      {
        "lineno": 61,
        "module_name": "apb",
        "instance_name": "DUT_APB",
        "port_connections": [
          {
            "portname": "PCLK",
            "argname": "PCLK"
          },
          {
            "portname": "PRESETn",
            "argname": "PRESETn"
          },
          {
            "portname": "PADDR",
            "argname": "PADDR"
          },
          {
            "portname": "PRDATA",
            "argname": "PRDATA"
          },
          {
            "portname": "PWDATA",
            "argname": "PWDATA"
          },
          {
            "portname": "PWRITE",
            "argname": "PWRITE"
          },
          {
            "portname": "PSELx",
            "argname": "PSELx"
          },
          {
            "portname": "PENABLE",
            "argname": "PENABLE"
          },
          {
            "portname": "PREADY",
            "argname": "PREADY"
          },
          {
            "portname": "PSLVERR",
            "argname": "PSLVERR"
          },
          {
            "portname": "READ_DATA_ON_RX",
            "argname": "RX_DATA_OUT"
          },
          {
            "portname": "INTERNAL_I2C_REGISTER_CONFIG",
            "argname": "REGISTER_CONFIG"
          },
          {
            "portname": "INTERNAL_I2C_REGISTER_TIMEOUT",
            "argname": "TIMEOUT_CONFIG"
          },
          {
            "portname": "INT_RX",
            "argname": "INT_RX"
          },
          {
            "portname": "WR_ENA",
            "argname": "TX_WRITE_ENA"
          },
          {
            "portname": "WRITE_DATA_ON_TX",
            "argname": "TX_DATA_IN"
          },
          {
            "portname": "RD_ENA",
            "argname": "RX_RD_EN"
          },
          {
            "portname": "INT_TX",
            "argname": "INT_TX"
          },
          {
            "portname": "TX_EMPTY",
            "argname": "tx_empty"
          },
          {
            "portname": "RX_EMPTY",
            "argname": "rx_empty"
          },
          {
            "portname": "ERROR",
            "argname": "error"
          }
        ],
        "parameter_connections": [],
        "arrays": {
          "msb": 0,
          "lsb": 0
        },
        "ast": "Instance",
        "startline": 61,
        "endline": 82,
        "parent_module": "i2c"
      },
      {
        "lineno": 84,
        "module_name": "module_i2c",
        "instance_name": "DUT_I2C_INTERNAL_RX_TX",
        "port_connections": [
          {
            "portname": "PCLK",
            "argname": "PCLK"
          },
          {
            "portname": "PRESETn",
            "argname": "PRESETn"
          },
          {
            "portname": "fifo_rx_wr_en",
            "argname": "RX_WRITE_ENA"
          },
          {
            "portname": "fifo_rx_f_empty",
            "argname": "RX_F_EMPTY"
          },
          {
            "portname": "fifo_rx_data_in",
            "argname": "RX_DATA_IN"
          },
          {
            "portname": "fifo_rx_f_full",
            "argname": "RX_F_FULL"
          },
          {
            "portname": "fifo_tx_f_full",
            "argname": "TX_F_FULL"
          },
          {
            "portname": "fifo_tx_f_empty",
            "argname": "TX_F_EMPTY"
          },
          {
            "portname": "fifo_tx_rd_en",
            "argname": "TX_RD_EN"
          },
          {
            "portname": "fifo_tx_data_out",
            "argname": "TX_DATA_OUT"
          },
          {
            "portname": "DATA_CONFIG_REG",
            "argname": "REGISTER_CONFIG"
          },
          {
            "portname": "TIMEOUT_TX",
            "argname": "TIMEOUT_CONFIG"
          },
          {
            "portname": "RX_EMPTY",
            "argname": "rx_empty"
          },
          {
            "portname": "TX_EMPTY",
            "argname": "tx_empty"
          },
          {
            "portname": "ERROR",
            "argname": "error"
          },
          {
            "portname": "ENABLE_SDA",
            "argname": "SDA_ENABLE"
          },
          {
            "portname": "ENABLE_SCL",
            "argname": "SCL_ENABLE"
          },
          {
            "portname": "SDA",
            "argname": "SDA"
          },
          {
            "portname": "SCL",
            "argname": "SCL"
          }
        ],
        "parameter_connections": [],
        "arrays": {
          "msb": 0,
          "lsb": 0
        },
        "ast": "Instance",
        "startline": 84,
        "endline": 103,
        "parent_module": "i2c"
      }
    ],
    "assigns": [
      {
        "lineno": 21,
        "left": "RESET_N",
        "right": "((PRESETn == 0))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 21,
        "endline": 21,
        "parent_module": "i2c"
      },
      {
        "lineno": 50,
        "left": "TX_F_FULL",
        "right": "w_full",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 50,
        "endline": 50,
        "parent_module": "i2c"
      }
    ],
    "always_blocks": [],
    "initial_blocks": [],
    "dataflow": []
  },
  "c:\\Users\\huijie\\Desktop\\graphrag\\AF_workflow\\../svtest\\pre_rtl\\module_i2c.v": {
    "modules": [
      {
        "name": "module_i2c",
        "lineno": 2,
        "ast": "ModuleDef",
        "startline": 2,
        "endline": 2
      }
    ],
    "ports": [
      {
        "name": "PCLK",
        "lineno": 7,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 7,
        "endline": 7,
        "parent_module": "module_i2c"
      },
      {
        "name": "PRESETn",
        "lineno": 8,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 8,
        "endline": 8,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_tx_f_full",
        "lineno": 9,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 9,
        "endline": 9,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_tx_f_empty",
        "lineno": 10,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 10,
        "endline": 10,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_tx_data_out",
        "lineno": 11,
        "direction": "input",
        "msb": "(DWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 11,
        "endline": 11,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_rx_f_full",
        "lineno": 12,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 12,
        "endline": 12,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_rx_f_empty",
        "lineno": 13,
        "direction": "input",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 13,
        "endline": 13,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_rx_wr_en",
        "lineno": 14,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 14,
        "endline": 14,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_rx_data_in",
        "lineno": 15,
        "direction": "output",
        "msb": "(DWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 15,
        "endline": 15,
        "parent_module": "module_i2c"
      },
      {
        "name": "DATA_CONFIG_REG",
        "lineno": 16,
        "direction": "input",
        "msb": "(AWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 16,
        "endline": 16,
        "parent_module": "module_i2c"
      },
      {
        "name": "TIMEOUT_TX",
        "lineno": 17,
        "direction": "input",
        "msb": "(AWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Input",
        "startline": 17,
        "endline": 17,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_tx_rd_en",
        "lineno": 18,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 18,
        "endline": 18,
        "parent_module": "module_i2c"
      },
      {
        "name": "TX_EMPTY",
        "lineno": 19,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 19,
        "endline": 19,
        "parent_module": "module_i2c"
      },
      {
        "name": "RX_EMPTY",
        "lineno": 20,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 20,
        "endline": 20,
        "parent_module": "module_i2c"
      },
      {
        "name": "ERROR",
        "lineno": 21,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 21,
        "endline": 21,
        "parent_module": "module_i2c"
      },
      {
        "name": "ENABLE_SDA",
        "lineno": 22,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 22,
        "endline": 22,
        "parent_module": "module_i2c"
      },
      {
        "name": "ENABLE_SCL",
        "lineno": 23,
        "direction": "output",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Output",
        "startline": 23,
        "endline": 23,
        "parent_module": "module_i2c"
      },
      {
        "name": "SDA",
        "lineno": 24,
        "direction": "inout",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Inout",
        "startline": 24,
        "endline": 24,
        "parent_module": "module_i2c"
      },
      {
        "name": "SCL",
        "lineno": 25,
        "direction": "inout",
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Inout",
        "startline": 25,
        "endline": 25,
        "parent_module": "module_i2c"
      }
    ],
    "signals": [],
    "registers": [
      {
        "name": "fifo_rx_wr_en",
        "lineno": 14,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 14,
        "endline": 14,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_rx_data_in",
        "lineno": 15,
        "msb": "(DWIDTH - 1)",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 15,
        "endline": 15,
        "parent_module": "module_i2c"
      },
      {
        "name": "fifo_tx_rd_en",
        "lineno": 18,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 18,
        "endline": 18,
        "parent_module": "module_i2c"
      },
      {
        "name": "count_tx",
        "lineno": 29,
        "msb": "1",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 29,
        "endline": 29,
        "parent_module": "module_i2c"
      },
      {
        "name": "count_rx",
        "lineno": 30,
        "msb": "1",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 30,
        "endline": 30,
        "parent_module": "module_i2c"
      },
      {
        "name": "count_send_data",
        "lineno": 31,
        "msb": "11",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 31,
        "endline": 31,
        "parent_module": "module_i2c"
      },
      {
        "name": "count_receive_data",
        "lineno": 32,
        "msb": "11",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 32,
        "endline": 32,
        "parent_module": "module_i2c"
      },
      {
        "name": "count_timeout",
        "lineno": 33,
        "msb": "11",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 33,
        "endline": 33,
        "parent_module": "module_i2c"
      },
      {
        "name": "BR_CLK_O",
        "lineno": 34,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 34,
        "endline": 34,
        "parent_module": "module_i2c"
      },
      {
        "name": "SDA_OUT",
        "lineno": 35,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 35,
        "endline": 35,
        "parent_module": "module_i2c"
      },
      {
        "name": "BR_CLK_O_RX",
        "lineno": 36,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 36,
        "endline": 36,
        "parent_module": "module_i2c"
      },
      {
        "name": "SDA_OUT_RX",
        "lineno": 37,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 37,
        "endline": 37,
        "parent_module": "module_i2c"
      },
      {
        "name": "RESPONSE",
        "lineno": 38,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 38,
        "endline": 38,
        "parent_module": "module_i2c"
      },
      {
        "name": "state_tx",
        "lineno": 80,
        "msb": "5",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 80,
        "endline": 80,
        "parent_module": "module_i2c"
      },
      {
        "name": "next_state_tx",
        "lineno": 81,
        "msb": "5",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 81,
        "endline": 81,
        "parent_module": "module_i2c"
      },
      {
        "name": "state_rx",
        "lineno": 1664,
        "msb": "5",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 1664,
        "endline": 1664,
        "parent_module": "module_i2c"
      },
      {
        "name": "next_state_rx",
        "lineno": 1665,
        "msb": "5",
        "lsb": "0",
        "signed": false,
        "dimensions": [],
        "value": "None",
        "ast": "Reg",
        "startline": 1665,
        "endline": 1665,
        "parent_module": "module_i2c"
      }
    ],
    "wires": [],
    "parameters": [
      {
        "name": "DWIDTH",
        "lineno": 3,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "32",
        "ast": "Parameter",
        "startline": 3,
        "endline": 3,
        "parent_module": "module_i2c"
      },
      {
        "name": "AWIDTH",
        "lineno": 4,
        "msb": 0,
        "lsb": 0,
        "signed": false,
        "dimensions": [],
        "value": "14",
        "ast": "Parameter",
        "startline": 4,
        "endline": 4,
        "parent_module": "module_i2c"
      }
    ],
    "instances": [],
    "assigns": [
      {
        "lineno": 27,
        "left": "TX_EMPTY",
        "right": "((fifo_tx_f_empty == 1'b1))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 27,
        "endline": 27,
        "parent_module": "module_i2c"
      },
      {
        "lineno": 28,
        "left": "RX_EMPTY",
        "right": "((fifo_rx_f_empty == 1'b1))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 28,
        "endline": 28,
        "parent_module": "module_i2c"
      },
      {
        "lineno": 82,
        "left": "SDA",
        "right": "(((((((DATA_CONFIG_REG[0] == 1'b1) & (DATA_CONFIG_REG[1] == 1'b0)) & (state_tx != RESPONSE_CIN)) & (state_tx != RESPONSE_ADDRESS)) & (state_tx != RESPONSE_DATA0_1)) & (state_tx != RESPONSE_DATA1_1)))? SDA_OUT:SDA_OUT_RX",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 82,
        "endline": 82,
        "parent_module": "module_i2c"
      },
      {
        "lineno": 83,
        "left": "SCL",
        "right": "(((DATA_CONFIG_REG[0] == 1'b1) & (DATA_CONFIG_REG[1] == 1'b0)))? BR_CLK_O:BR_CLK_O_RX",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 83,
        "endline": 83,
        "parent_module": "module_i2c"
      },
      {
        "lineno": 84,
        "left": "ERROR",
        "right": "(((DATA_CONFIG_REG[0] == 1'b1) & (DATA_CONFIG_REG[1] == 1'b1)))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 84,
        "endline": 84,
        "parent_module": "module_i2c"
      },
      {
        "lineno": 1666,
        "left": "ENABLE_SDA",
        "right": "(((((state_rx == RESPONSE_CIN) || (state_rx == RESPONSE_ADDRESS)) || (state_rx == RESPONSE_DATA0_1)) || (state_rx == RESPONSE_DATA1_1)))? 1'b1:(((((state_tx == RESPONSE_CIN) || (state_tx == RESPONSE_ADDRESS)) || (state_tx == RESPONSE_DATA0_1)) || (state_tx == RESPONSE_DATA1_1)))? 1'b0:1'b1",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 1666,
        "endline": 1673,
        "parent_module": "module_i2c"
      },
      {
        "lineno": 1674,
        "left": "ENABLE_SCL",
        "right": "(((((state_rx == RESPONSE_CIN) || (state_rx == RESPONSE_ADDRESS)) || (state_rx == RESPONSE_DATA0_1)) || (state_rx == RESPONSE_DATA1_1)))? 1'b1:(((((state_tx == RESPONSE_CIN) || (state_tx == RESPONSE_ADDRESS)) || (state_tx == RESPONSE_DATA0_1)) || (state_tx == RESPONSE_DATA1_1)))? 1'b1:1'b0",
        "ldelay": "None",
        "rdelay": "None",
        "ast": "Assign",
        "startline": 1674,
        "endline": 1681,
        "parent_module": "module_i2c"
      }
    ],
    "always_blocks": [
      {
        "lineno": 85,
        "senlist": [
          {
            "edge": "all",
            "sig": null
          }
        ],
        "ast": "Always",
        "startline": 85,
        "endline": 592,
        "logic_type": "combinational",
        "cfg_data": {
          "next_state_tx": [
            {
              "condition": "always",
              "line": 87,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "state_tx"
            },
            {
              "condition": "state_tx == IDLE && (((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))",
              "line": 93,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "IDLE"
            },
            {
              "condition": "state_tx == IDLE && !((((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))) && (((DATA_CONFIG_REG[0] == 1'b1) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b1))",
              "line": 97,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "IDLE"
            },
            {
              "condition": "state_tx == IDLE && !((((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))) && !((((DATA_CONFIG_REG[0] == 1'b1) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b1))) && ((((DATA_CONFIG_REG[0] == 1'b1) && (((fifo_tx_f_full == 1'b0) && (fifo_tx_f_empty == 1'b0)) || (fifo_tx_f_full == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b0)) && (count_timeout < TIMEOUT_TX))",
              "line": 101,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "START"
            },
            {
              "condition": "state_tx == START && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 108,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "START"
            },
            {
              "condition": "state_tx == START && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 112,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_1"
            },
            {
              "condition": "state_tx == CONTROLIN_1 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 119,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_1"
            },
            {
              "condition": "state_tx == CONTROLIN_1 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 123,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_2"
            },
            {
              "condition": "state_tx == CONTROLIN_2 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 130,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_2"
            },
            {
              "condition": "state_tx == CONTROLIN_2 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 134,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_3"
            },
            {
              "condition": "state_tx == CONTROLIN_3 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 141,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_3"
            },
            {
              "condition": "state_tx == CONTROLIN_3 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 145,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_4"
            },
            {
              "condition": "state_tx == CONTROLIN_4 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 152,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_4"
            },
            {
              "condition": "state_tx == CONTROLIN_4 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 156,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_5"
            },
            {
              "condition": "state_tx == CONTROLIN_5 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 163,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_5"
            },
            {
              "condition": "state_tx == CONTROLIN_5 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 167,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_6"
            },
            {
              "condition": "state_tx == CONTROLIN_6 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 174,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_6"
            },
            {
              "condition": "state_tx == CONTROLIN_6 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 178,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_7"
            },
            {
              "condition": "state_tx == CONTROLIN_7 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 185,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_7"
            },
            {
              "condition": "state_tx == CONTROLIN_7 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 189,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_8"
            },
            {
              "condition": "state_tx == CONTROLIN_8 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 196,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_8"
            },
            {
              "condition": "state_tx == CONTROLIN_8 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 200,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_CIN"
            },
            {
              "condition": "state_tx == RESPONSE_CIN && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 207,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_CIN"
            },
            {
              "condition": "state_tx == RESPONSE_CIN && !((count_send_data != DATA_CONFIG_REG[13:2])) && (RESPONSE == 1'b0)",
              "line": 211,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_tx == RESPONSE_CIN && !((count_send_data != DATA_CONFIG_REG[13:2])) && !((RESPONSE == 1'b0)) && (RESPONSE == 1'b1)",
              "line": 215,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "NACK"
            },
            {
              "condition": "state_tx == ADDRESS_1 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 222,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_1"
            },
            {
              "condition": "state_tx == ADDRESS_1 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 226,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_2"
            },
            {
              "condition": "state_tx == ADDRESS_2 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 233,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_2"
            },
            {
              "condition": "state_tx == ADDRESS_2 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 237,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_3"
            },
            {
              "condition": "state_tx == ADDRESS_3 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 244,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_3"
            },
            {
              "condition": "state_tx == ADDRESS_3 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 248,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_4"
            },
            {
              "condition": "state_tx == ADDRESS_4 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 255,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_4"
            },
            {
              "condition": "state_tx == ADDRESS_4 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 259,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_5"
            },
            {
              "condition": "state_tx == ADDRESS_5 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 266,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_5"
            },
            {
              "condition": "state_tx == ADDRESS_5 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 270,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_6"
            },
            {
              "condition": "state_tx == ADDRESS_6 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 277,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_6"
            },
            {
              "condition": "state_tx == ADDRESS_6 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 281,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_7"
            },
            {
              "condition": "state_tx == ADDRESS_7 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 288,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_7"
            },
            {
              "condition": "state_tx == ADDRESS_7 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 292,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_8"
            },
            {
              "condition": "state_tx == ADDRESS_8 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 299,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_8"
            },
            {
              "condition": "state_tx == ADDRESS_8 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 303,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_ADDRESS"
            },
            {
              "condition": "state_tx == RESPONSE_ADDRESS && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 310,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_ADDRESS"
            },
            {
              "condition": "state_tx == RESPONSE_ADDRESS && !((count_send_data != DATA_CONFIG_REG[13:2])) && (RESPONSE == 1'b0)",
              "line": 314,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_tx == RESPONSE_ADDRESS && !((count_send_data != DATA_CONFIG_REG[13:2])) && !((RESPONSE == 1'b0)) && (RESPONSE == 1'b1)",
              "line": 318,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "NACK"
            },
            {
              "condition": "state_tx == DATA0_1 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 325,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_1"
            },
            {
              "condition": "state_tx == DATA0_1 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 329,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_2"
            },
            {
              "condition": "state_tx == DATA0_2 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 336,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_2"
            },
            {
              "condition": "state_tx == DATA0_2 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 340,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_3"
            },
            {
              "condition": "state_tx == DATA0_3 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 347,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_3"
            },
            {
              "condition": "state_tx == DATA0_3 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 351,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_4"
            },
            {
              "condition": "state_tx == DATA0_4 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 358,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_4"
            },
            {
              "condition": "state_tx == DATA0_4 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 362,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_5"
            },
            {
              "condition": "state_tx == DATA0_5 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 369,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_5"
            },
            {
              "condition": "state_tx == DATA0_5 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 373,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_6"
            },
            {
              "condition": "state_tx == DATA0_6 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 380,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_6"
            },
            {
              "condition": "state_tx == DATA0_6 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 384,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_7"
            },
            {
              "condition": "state_tx == DATA0_7 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 391,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_7"
            },
            {
              "condition": "state_tx == DATA0_7 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 395,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_8"
            },
            {
              "condition": "state_tx == DATA0_8 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 402,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_8"
            },
            {
              "condition": "state_tx == DATA0_8 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 406,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_DATA0_1"
            },
            {
              "condition": "state_tx == RESPONSE_DATA0_1 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 413,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_DATA0_1"
            },
            {
              "condition": "state_tx == RESPONSE_DATA0_1 && !((count_send_data != DATA_CONFIG_REG[13:2])) && (RESPONSE == 1'b0)",
              "line": 417,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_tx == RESPONSE_DATA0_1 && !((count_send_data != DATA_CONFIG_REG[13:2])) && !((RESPONSE == 1'b0)) && (RESPONSE == 1'b1)",
              "line": 421,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "NACK"
            },
            {
              "condition": "state_tx == DATA1_1 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 428,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_1"
            },
            {
              "condition": "state_tx == DATA1_1 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 432,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_2"
            },
            {
              "condition": "state_tx == DATA1_2 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 439,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_2"
            },
            {
              "condition": "state_tx == DATA1_2 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 443,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_3"
            },
            {
              "condition": "state_tx == DATA1_3 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 450,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_3"
            },
            {
              "condition": "state_tx == DATA1_3 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 454,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_4"
            },
            {
              "condition": "state_tx == DATA1_4 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 461,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_4"
            },
            {
              "condition": "state_tx == DATA1_4 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 465,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_5"
            },
            {
              "condition": "state_tx == DATA1_5 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 472,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_5"
            },
            {
              "condition": "state_tx == DATA1_5 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 476,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_6"
            },
            {
              "condition": "state_tx == DATA1_6 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 483,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_6"
            },
            {
              "condition": "state_tx == DATA1_6 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 487,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_7"
            },
            {
              "condition": "state_tx == DATA1_7 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 494,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_7"
            },
            {
              "condition": "state_tx == DATA1_7 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 498,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_8"
            },
            {
              "condition": "state_tx == DATA1_8 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 505,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_8"
            },
            {
              "condition": "state_tx == DATA1_8 && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 509,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_DATA1_1"
            },
            {
              "condition": "state_tx == RESPONSE_DATA1_1 && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 516,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_DATA1_1"
            },
            {
              "condition": "state_tx == RESPONSE_DATA1_1 && !((count_send_data != DATA_CONFIG_REG[13:2])) && (RESPONSE == 1'b0)",
              "line": 520,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_tx == RESPONSE_DATA1_1 && !((count_send_data != DATA_CONFIG_REG[13:2])) && !((RESPONSE == 1'b0)) && (RESPONSE == 1'b1)",
              "line": 524,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "NACK"
            },
            {
              "condition": "state_tx == DELAY_BYTES && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 531,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_tx == DELAY_BYTES && !((count_send_data != DATA_CONFIG_REG[13:2])) && (count_tx == 2'd0)",
              "line": 537,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_1"
            },
            {
              "condition": "state_tx == DELAY_BYTES && !((count_send_data != DATA_CONFIG_REG[13:2])) && !((count_tx == 2'd0)) && (count_tx == 2'd1)",
              "line": 541,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_1"
            },
            {
              "condition": "state_tx == DELAY_BYTES && !((count_send_data != DATA_CONFIG_REG[13:2])) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && (count_tx == 2'd2)",
              "line": 545,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_1"
            },
            {
              "condition": "state_tx == DELAY_BYTES && !((count_send_data != DATA_CONFIG_REG[13:2])) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && !((count_tx == 2'd2)) && (count_tx == 2'd3)",
              "line": 549,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "STOP"
            },
            {
              "condition": "state_tx == NACK && (count_send_data != (DATA_CONFIG_REG[13:2] * 2'd2))",
              "line": 557,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "NACK"
            },
            {
              "condition": "state_tx == NACK && !((count_send_data != (DATA_CONFIG_REG[13:2] * 2'd2))) && (count_tx == 2'd0)",
              "line": 563,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_1"
            },
            {
              "condition": "state_tx == NACK && !((count_send_data != (DATA_CONFIG_REG[13:2] * 2'd2))) && !((count_tx == 2'd0)) && (count_tx == 2'd1)",
              "line": 567,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_1"
            },
            {
              "condition": "state_tx == NACK && !((count_send_data != (DATA_CONFIG_REG[13:2] * 2'd2))) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && (count_tx == 2'd2)",
              "line": 571,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_1"
            },
            {
              "condition": "state_tx == NACK && !((count_send_data != (DATA_CONFIG_REG[13:2] * 2'd2))) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && !((count_tx == 2'd2)) && (count_tx == 2'd3)",
              "line": 575,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_1"
            },
            {
              "condition": "state_tx == STOP && (count_send_data != DATA_CONFIG_REG[13:2])",
              "line": 583,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "STOP"
            },
            {
              "condition": "state_tx == STOP && !((count_send_data != DATA_CONFIG_REG[13:2]))",
              "line": 587,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "IDLE"
            },
            {
              "condition": "(!(state_tx == IDLE) && !(state_tx == START) && !(state_tx == CONTROLIN_1) && !(state_tx == CONTROLIN_2) && !(state_tx == CONTROLIN_3) && !(state_tx == CONTROLIN_4) && !(state_tx == CONTROLIN_5) && !(state_tx == CONTROLIN_6) && !(state_tx == CONTROLIN_7) && !(state_tx == CONTROLIN_8) && !(state_tx == RESPONSE_CIN) && !(state_tx == ADDRESS_1) && !(state_tx == ADDRESS_2) && !(state_tx == ADDRESS_3) && !(state_tx == ADDRESS_4) && !(state_tx == ADDRESS_5) && !(state_tx == ADDRESS_6) && !(state_tx == ADDRESS_7) && !(state_tx == ADDRESS_8) && !(state_tx == RESPONSE_ADDRESS) && !(state_tx == DATA0_1) && !(state_tx == DATA0_2) && !(state_tx == DATA0_3) && !(state_tx == DATA0_4) && !(state_tx == DATA0_5) && !(state_tx == DATA0_6) && !(state_tx == DATA0_7) && !(state_tx == DATA0_8) && !(state_tx == RESPONSE_DATA0_1) && !(state_tx == DATA1_1) && !(state_tx == DATA1_2) && !(state_tx == DATA1_3) && !(state_tx == DATA1_4) && !(state_tx == DATA1_5) && !(state_tx == DATA1_6) && !(state_tx == DATA1_7) && !(state_tx == DATA1_8) && !(state_tx == RESPONSE_DATA1_1) && !(state_tx == DELAY_BYTES) && !(state_tx == NACK) && !(state_tx == STOP))",
              "line": 592,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "IDLE"
            }
          ]
        },
        "parent_module": "module_i2c"
      },
      {
        "lineno": 596,
        "senlist": [
          {
            "edge": "posedge",
            "sig": "PCLK"
          }
        ],
        "ast": "Always",
        "startline": 596,
        "endline": 1659,
        "logic_type": "sequential",
        "cfg_data": {
          "count_send_data": [
            {
              "condition": "!PRESETn",
              "line": 600,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == IDLE && (((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))",
              "line": 617,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == IDLE && !((((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))) && (((DATA_CONFIG_REG[0] == 1'b1) && (((fifo_tx_f_empty == 1'b0) && (fifo_tx_f_full == 1'b0)) || (fifo_tx_f_full == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b0))",
              "line": 623,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == IDLE && !((((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))) && !((((DATA_CONFIG_REG[0] == 1'b1) && (((fifo_tx_f_empty == 1'b0) && (fifo_tx_f_full == 1'b0)) || (fifo_tx_f_full == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b0))) && (((DATA_CONFIG_REG[0] == 1'b1) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b1))",
              "line": 628,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == START && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 637,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == START && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 642,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 654,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 671,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_2 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 679,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_2 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 696,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_3 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 704,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_3 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 721,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_4 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 729,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_4 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 746,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_5 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 754,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_5 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 771,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_6 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 779,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_6 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 796,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_7 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 804,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_7 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 821,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_8 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 829,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_8 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 846,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_CIN && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 854,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_CIN && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 871,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 878,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 895,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_2 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 903,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_2 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 920,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_3 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 928,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_3 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 945,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_4 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 953,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_4 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 970,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_5 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 978,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_5 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 995,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_6 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1003,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_6 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1020,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_7 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1028,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_7 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1045,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_8 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1053,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_8 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1070,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_ADDRESS && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1078,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_ADDRESS && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1095,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1102,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1119,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_2 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1127,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_2 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1144,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_3 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1152,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_3 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1169,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_4 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1177,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_4 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1194,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_5 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1202,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_5 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1219,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_6 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1227,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_6 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1244,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_7 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1252,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_7 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1269,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_8 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1277,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_8 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1294,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1302,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA0_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1319,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1326,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1343,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_2 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1351,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_2 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1368,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_3 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1376,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_3 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1393,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_4 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1401,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_4 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1418,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_5 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1426,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_5 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1443,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_6 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1451,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_6 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1468,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_7 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1476,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_7 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1493,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_8 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1501,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_8 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1518,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1526,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA1_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1543,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1552,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1577,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && (count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3))",
              "line": 1585,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && !((count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3)))",
              "line": 1613,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == STOP && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1641,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_send_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == STOP && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1653,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && (!(state_tx == IDLE) && !(state_tx == START) && !(state_tx == CONTROLIN_1) && !(state_tx == CONTROLIN_2) && !(state_tx == CONTROLIN_3) && !(state_tx == CONTROLIN_4) && !(state_tx == CONTROLIN_5) && !(state_tx == CONTROLIN_6) && !(state_tx == CONTROLIN_7) && !(state_tx == CONTROLIN_8) && !(state_tx == RESPONSE_CIN) && !(state_tx == ADDRESS_1) && !(state_tx == ADDRESS_2) && !(state_tx == ADDRESS_3) && !(state_tx == ADDRESS_4) && !(state_tx == ADDRESS_5) && !(state_tx == ADDRESS_6) && !(state_tx == ADDRESS_7) && !(state_tx == ADDRESS_8) && !(state_tx == RESPONSE_ADDRESS) && !(state_tx == DATA0_1) && !(state_tx == DATA0_2) && !(state_tx == DATA0_3) && !(state_tx == DATA0_4) && !(state_tx == DATA0_5) && !(state_tx == DATA0_6) && !(state_tx == DATA0_7) && !(state_tx == DATA0_8) && !(state_tx == RESPONSE_DATA0_1) && !(state_tx == DATA1_1) && !(state_tx == DATA1_2) && !(state_tx == DATA1_3) && !(state_tx == DATA1_4) && !(state_tx == DATA1_5) && !(state_tx == DATA1_6) && !(state_tx == DATA1_7) && !(state_tx == DATA1_8) && !(state_tx == RESPONSE_DATA1_1) && !(state_tx == DELAY_BYTES) && !(state_tx == NACK) && !(state_tx == STOP))",
              "line": 1659,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd4095"
            }
          ],
          "state_tx": [
            {
              "condition": "!PRESETn",
              "line": 601,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "IDLE"
            },
            {
              "condition": "!(!PRESETn)",
              "line": 610,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "next_state_tx"
            }
          ],
          "SDA_OUT": [
            {
              "condition": "!PRESETn",
              "line": 602,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == IDLE && (((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))",
              "line": 618,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == IDLE && !((((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))) && (((DATA_CONFIG_REG[0] == 1'b1) && (((fifo_tx_f_empty == 1'b0) && (fifo_tx_f_full == 1'b0)) || (fifo_tx_f_full == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b0))",
              "line": 624,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == IDLE && !((((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))) && !((((DATA_CONFIG_REG[0] == 1'b1) && (((fifo_tx_f_empty == 1'b0) && (fifo_tx_f_full == 1'b0)) || (fifo_tx_f_full == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b0))) && (((DATA_CONFIG_REG[0] == 1'b1) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b1))",
              "line": 629,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == START && (count_send_data == (DATA_CONFIG_REG[13:2] - 12'd1))",
              "line": 646,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[0:0]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 655,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[0:0]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 672,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[1:1]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_2 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 680,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[1:1]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_2 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 697,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[2:2]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_3 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 705,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[2:2]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_3 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 722,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[3:3]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_4 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 730,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[3:3]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_4 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 747,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[4:4]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_5 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 755,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[4:4]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_5 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 772,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[5:5]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_6 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 780,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[5:5]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_6 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 797,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[6:6]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_7 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 805,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[6:6]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_7 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 822,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[7:7]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_8 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 830,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[7:7]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_8 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 847,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 879,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[8:8]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 896,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[9:9]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_2 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 904,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[9:9]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_2 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 921,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[10:10]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_3 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 929,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[10:10]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_3 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 946,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[11:11]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_4 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 954,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[11:11]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_4 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 971,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[12:12]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_5 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 979,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[12:12]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_5 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 996,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[13:13]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_6 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1004,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[13:13]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_6 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1021,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[14:14]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_7 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1029,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[14:14]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_7 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1046,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[15:15]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_8 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1054,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[15:15]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_8 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1071,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1103,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[16:16]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1120,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[17:17]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_2 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1128,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[17:17]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_2 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1145,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[18:18]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_3 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1153,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[18:18]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_3 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1170,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[19:19]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_4 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1178,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[19:19]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_4 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1195,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[20:20]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_5 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1203,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[20:20]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_5 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1220,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[21:21]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_6 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1228,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[21:21]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_6 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1245,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[22:22]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_7 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1253,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[22:22]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_7 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1270,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[23:23]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_8 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1278,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[23:23]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_8 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1295,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1327,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[24:24]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1344,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[25:25]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_2 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1352,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[25:25]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_2 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1369,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[26:26]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_3 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1377,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[26:26]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_3 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1394,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[27:27]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_4 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1402,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[27:27]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_4 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1419,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[28:28]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_5 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1427,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[28:28]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_5 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1444,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[29:29]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_6 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1452,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[29:29]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_6 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1469,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[30:30]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_7 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1477,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[30:30]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_7 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1494,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[31:31]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_8 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1502,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[31:31]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_8 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1519,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1554,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && !((count_send_data < DATA_CONFIG_REG[13:2])) && (count_tx == 2'd0)",
              "line": 1561,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[8:8]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && !((count_send_data < DATA_CONFIG_REG[13:2])) && !((count_tx == 2'd0)) && (count_tx == 2'd1)",
              "line": 1566,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[16:16]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && !((count_send_data < DATA_CONFIG_REG[13:2])) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && (count_tx == 2'd2)",
              "line": 1571,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[24:24]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && (count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3)) && (count_receive_data < (DATA_CONFIG_REG[13:2] / 12'd2))",
              "line": 1588,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && (count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3)) && !((count_receive_data < (DATA_CONFIG_REG[13:2] / 12'd2))) && ((count_send_data > ((DATA_CONFIG_REG[13:2] / 12'd2) - 12'd1)) && (count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1592,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && (count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3)) && !((count_receive_data < (DATA_CONFIG_REG[13:2] / 12'd2))) && !(((count_send_data > ((DATA_CONFIG_REG[13:2] / 12'd2) - 12'd1)) && (count_send_data < DATA_CONFIG_REG[13:2]))) && (count_send_data == (DATA_CONFIG_REG[13:2] * 2'd2))",
              "line": 1596,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && !((count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3))) && (count_tx == 2'd0)",
              "line": 1617,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[0:0]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && !((count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3))) && !((count_tx == 2'd0)) && (count_tx == 2'd1)",
              "line": 1622,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[8:8]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && !((count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3))) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && (count_tx == 2'd2)",
              "line": 1627,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[16:16]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && !((count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3))) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && !((count_tx == 2'd2)) && (count_tx == 2'd3)",
              "line": 1632,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "fifo_tx_data_out[24:24]"
            },
            {
              "condition": "!(!PRESETn) && state_tx == STOP && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < ((DATA_CONFIG_REG[13:2] / 12'd2) - 12'd2))",
              "line": 1644,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == STOP && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < ((DATA_CONFIG_REG[13:2] / 12'd2) - 12'd2))) && ((count_send_data > ((DATA_CONFIG_REG[13:2] / 12'd2) - 12'd1)) && (count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1648,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            }
          ],
          "fifo_tx_rd_en": [
            {
              "condition": "!PRESETn",
              "line": 603,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == IDLE",
              "line": 614,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA1_1 && !((count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1544,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES",
              "line": 1549,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK",
              "line": 1582,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && (!(state_tx == IDLE) && !(state_tx == START) && !(state_tx == CONTROLIN_1) && !(state_tx == CONTROLIN_2) && !(state_tx == CONTROLIN_3) && !(state_tx == CONTROLIN_4) && !(state_tx == CONTROLIN_5) && !(state_tx == CONTROLIN_6) && !(state_tx == CONTROLIN_7) && !(state_tx == CONTROLIN_8) && !(state_tx == RESPONSE_CIN) && !(state_tx == ADDRESS_1) && !(state_tx == ADDRESS_2) && !(state_tx == ADDRESS_3) && !(state_tx == ADDRESS_4) && !(state_tx == ADDRESS_5) && !(state_tx == ADDRESS_6) && !(state_tx == ADDRESS_7) && !(state_tx == ADDRESS_8) && !(state_tx == RESPONSE_ADDRESS) && !(state_tx == DATA0_1) && !(state_tx == DATA0_2) && !(state_tx == DATA0_3) && !(state_tx == DATA0_4) && !(state_tx == DATA0_5) && !(state_tx == DATA0_6) && !(state_tx == DATA0_7) && !(state_tx == DATA0_8) && !(state_tx == RESPONSE_DATA0_1) && !(state_tx == DATA1_1) && !(state_tx == DATA1_2) && !(state_tx == DATA1_3) && !(state_tx == DATA1_4) && !(state_tx == DATA1_5) && !(state_tx == DATA1_6) && !(state_tx == DATA1_7) && !(state_tx == DATA1_8) && !(state_tx == RESPONSE_DATA1_1) && !(state_tx == DELAY_BYTES) && !(state_tx == NACK) && !(state_tx == STOP))",
              "line": 1658,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            }
          ],
          "count_tx": [
            {
              "condition": "!PRESETn",
              "line": 604,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "2'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == START && (count_send_data == (DATA_CONFIG_REG[13:2] - 12'd1))",
              "line": 647,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "2'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && !((count_send_data < DATA_CONFIG_REG[13:2])) && (count_tx == 2'd0)",
              "line": 1560,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_tx + 2'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && !((count_send_data < DATA_CONFIG_REG[13:2])) && !((count_tx == 2'd0)) && (count_tx == 2'd1)",
              "line": 1565,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_tx + 2'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && !((count_send_data < DATA_CONFIG_REG[13:2])) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && (count_tx == 2'd2)",
              "line": 1570,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_tx + 2'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && !((count_send_data < DATA_CONFIG_REG[13:2])) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && !((count_tx == 2'd2)) && (count_tx == 2'd3)",
              "line": 1575,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "2'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && !((count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3))) && (count_tx == 2'd0)",
              "line": 1616,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "2'd0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && !((count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3))) && !((count_tx == 2'd0)) && (count_tx == 2'd1)",
              "line": 1621,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "2'd1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && !((count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3))) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && (count_tx == 2'd2)",
              "line": 1626,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "2'd2"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && !((count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3))) && !((count_tx == 2'd0)) && !((count_tx == 2'd1)) && !((count_tx == 2'd2)) && (count_tx == 2'd3)",
              "line": 1631,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "2'd3"
            }
          ],
          "BR_CLK_O": [
            {
              "condition": "!PRESETn",
              "line": 605,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == IDLE && (((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))",
              "line": 619,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == IDLE && !((((DATA_CONFIG_REG[0] == 1'b0) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b0))) && !((((DATA_CONFIG_REG[0] == 1'b1) && (((fifo_tx_f_empty == 1'b0) && (fifo_tx_f_full == 1'b0)) || (fifo_tx_f_full == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b0))) && (((DATA_CONFIG_REG[0] == 1'b1) && ((fifo_tx_f_full == 1'b1) || (fifo_tx_f_empty == 1'b0))) && (DATA_CONFIG_REG[1] == 1'b1))",
              "line": 630,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == START && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 638,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 658,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 662,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 666,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 683,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 687,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 691,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 708,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 712,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 716,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 733,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 737,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 741,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 758,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 762,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 766,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 783,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 787,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 791,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 808,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 812,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 816,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 833,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 837,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == CONTROLIN_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 841,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_CIN && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 858,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_CIN && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 862,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_CIN && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 866,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 882,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 886,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 890,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 907,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 911,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 915,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 932,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 936,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 940,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 957,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 961,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 965,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 982,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 986,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 990,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1007,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1011,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1015,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1032,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1036,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1040,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1057,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1061,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == ADDRESS_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1065,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_ADDRESS && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1082,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_ADDRESS && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1086,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_ADDRESS && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1090,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1106,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1110,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1114,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1131,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1135,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1139,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1156,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1160,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1164,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1181,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1185,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1189,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1206,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1210,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1214,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1231,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1235,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1239,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1256,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1260,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1264,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1281,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1285,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA0_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1289,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1306,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1310,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1314,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1330,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1334,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1338,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1355,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1359,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_2 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1363,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1380,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1384,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_3 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1388,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1405,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1409,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_4 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1413,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1430,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1434,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_5 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1438,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1455,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1459,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_6 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1463,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1480,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1484,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_7 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1488,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1505,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1509,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DATA1_8 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1513,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))",
              "line": 1530,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && ((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 1534,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2]) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd4))) && !(((count_send_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_send_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1))))",
              "line": 1538,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == DELAY_BYTES && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1553,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && (count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3)) && (count_send_data < (DATA_CONFIG_REG[13:2] / 12'd2))",
              "line": 1600,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && (count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3)) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd2))) && ((count_send_data > ((DATA_CONFIG_REG[13:2] / 12'd2) - 12'd1)) && (count_send_data < DATA_CONFIG_REG[13:2]))",
              "line": 1604,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == NACK && (count_send_data < (DATA_CONFIG_REG[13:2] * 2'd3)) && !((count_send_data < (DATA_CONFIG_REG[13:2] / 12'd2))) && !(((count_send_data > ((DATA_CONFIG_REG[13:2] / 12'd2) - 12'd1)) && (count_send_data < DATA_CONFIG_REG[13:2]))) && (count_send_data < (DATA_CONFIG_REG[13:2] * 2'd2))",
              "line": 1608,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            },
            {
              "condition": "!(!PRESETn) && state_tx == STOP",
              "line": 1638,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b1"
            }
          ],
          "RESPONSE": [
            {
              "condition": "!PRESETn",
              "line": 606,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_CIN && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 855,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_ADDRESS && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1079,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA0_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1303,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            },
            {
              "condition": "!(!PRESETn) && state_tx == RESPONSE_DATA1_1 && (count_send_data < DATA_CONFIG_REG[13:2])",
              "line": 1527,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ]
        },
        "parent_module": "module_i2c"
      },
      {
        "lineno": 1682,
        "senlist": [
          {
            "edge": "all",
            "sig": null
          }
        ],
        "ast": "Always",
        "startline": 1682,
        "endline": 2167,
        "logic_type": "combinational",
        "cfg_data": {
          "next_state_rx": [
            {
              "condition": "always",
              "line": 1684,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "state_rx"
            },
            {
              "condition": "state_rx == IDLE && ((DATA_CONFIG_REG[0] == 1'b0) && (DATA_CONFIG_REG[1] == 1'b0))",
              "line": 1690,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "IDLE"
            },
            {
              "condition": "state_rx == IDLE && !(((DATA_CONFIG_REG[0] == 1'b0) && (DATA_CONFIG_REG[1] == 1'b0))) && ((DATA_CONFIG_REG[0] == 1'b1) && (DATA_CONFIG_REG[1] == 1'b1))",
              "line": 1694,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "IDLE"
            },
            {
              "condition": "state_rx == IDLE && !(((DATA_CONFIG_REG[0] == 1'b0) && (DATA_CONFIG_REG[1] == 1'b0))) && !(((DATA_CONFIG_REG[0] == 1'b1) && (DATA_CONFIG_REG[1] == 1'b1))) && ((((DATA_CONFIG_REG[0] == 1'b0) && (DATA_CONFIG_REG[1] == 1'b1)) && (SDA_OUT_RX == 1'b0)) && (BR_CLK_O_RX == 1'b0))",
              "line": 1698,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "START"
            },
            {
              "condition": "state_rx == START && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1705,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "START"
            },
            {
              "condition": "state_rx == START && !((count_receive_data != DATA_CONFIG_REG[13:2])) && ((fifo_rx_data_in[0] == 1'b0) && (fifo_rx_data_in[1] == 1'b0))",
              "line": 1709,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_1"
            },
            {
              "condition": "state_rx == START && !((count_receive_data != DATA_CONFIG_REG[13:2])) && !(((fifo_rx_data_in[0] == 1'b0) && (fifo_rx_data_in[1] == 1'b0)))",
              "line": 1713,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "IDLE"
            },
            {
              "condition": "state_rx == CONTROLIN_1 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1720,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_1"
            },
            {
              "condition": "state_rx == CONTROLIN_1 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1724,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_2"
            },
            {
              "condition": "state_rx == CONTROLIN_2 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1731,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_2"
            },
            {
              "condition": "state_rx == CONTROLIN_2 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1735,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_3"
            },
            {
              "condition": "state_rx == CONTROLIN_3 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1742,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_3"
            },
            {
              "condition": "state_rx == CONTROLIN_3 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1746,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_4"
            },
            {
              "condition": "state_rx == CONTROLIN_4 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1753,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_4"
            },
            {
              "condition": "state_rx == CONTROLIN_4 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1757,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_5"
            },
            {
              "condition": "state_rx == CONTROLIN_5 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1764,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_5"
            },
            {
              "condition": "state_rx == CONTROLIN_5 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1768,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_6"
            },
            {
              "condition": "state_rx == CONTROLIN_6 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1775,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_6"
            },
            {
              "condition": "state_rx == CONTROLIN_6 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1779,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_7"
            },
            {
              "condition": "state_rx == CONTROLIN_7 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1786,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_7"
            },
            {
              "condition": "state_rx == CONTROLIN_7 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1790,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_8"
            },
            {
              "condition": "state_rx == CONTROLIN_8 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1797,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "CONTROLIN_8"
            },
            {
              "condition": "state_rx == CONTROLIN_8 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1801,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_CIN"
            },
            {
              "condition": "state_rx == RESPONSE_CIN && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1808,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_CIN"
            },
            {
              "condition": "state_rx == RESPONSE_CIN && !((count_receive_data != DATA_CONFIG_REG[13:2])) && (RESPONSE == 1'b0)",
              "line": 1812,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_rx == RESPONSE_CIN && !((count_receive_data != DATA_CONFIG_REG[13:2])) && !((RESPONSE == 1'b0)) && (RESPONSE == 1'b1)",
              "line": 1816,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "NACK"
            },
            {
              "condition": "state_rx == ADDRESS_1 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1823,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_1"
            },
            {
              "condition": "state_rx == ADDRESS_1 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1827,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_2"
            },
            {
              "condition": "state_rx == ADDRESS_2 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1834,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_2"
            },
            {
              "condition": "state_rx == ADDRESS_2 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1838,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_3"
            },
            {
              "condition": "state_rx == ADDRESS_3 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1845,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_3"
            },
            {
              "condition": "state_rx == ADDRESS_3 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1849,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_4"
            },
            {
              "condition": "state_rx == ADDRESS_4 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1856,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_4"
            },
            {
              "condition": "state_rx == ADDRESS_4 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1860,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_5"
            },
            {
              "condition": "state_rx == ADDRESS_5 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1867,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_5"
            },
            {
              "condition": "state_rx == ADDRESS_5 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1871,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_6"
            },
            {
              "condition": "state_rx == ADDRESS_6 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1878,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_6"
            },
            {
              "condition": "state_rx == ADDRESS_6 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1882,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_7"
            },
            {
              "condition": "state_rx == ADDRESS_7 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1889,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_7"
            },
            {
              "condition": "state_rx == ADDRESS_7 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1893,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_8"
            },
            {
              "condition": "state_rx == ADDRESS_8 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1900,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_8"
            },
            {
              "condition": "state_rx == ADDRESS_8 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1904,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_ADDRESS"
            },
            {
              "condition": "state_rx == RESPONSE_ADDRESS && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1911,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_ADDRESS"
            },
            {
              "condition": "state_rx == RESPONSE_ADDRESS && !((count_receive_data != DATA_CONFIG_REG[13:2])) && (RESPONSE == 1'b0)",
              "line": 1915,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_rx == RESPONSE_ADDRESS && !((count_receive_data != DATA_CONFIG_REG[13:2])) && !((RESPONSE == 1'b0)) && (RESPONSE == 1'b1)",
              "line": 1919,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "NACK"
            },
            {
              "condition": "state_rx == DATA0_1 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1926,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_1"
            },
            {
              "condition": "state_rx == DATA0_1 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1930,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_2"
            },
            {
              "condition": "state_rx == DATA0_2 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1937,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_2"
            },
            {
              "condition": "state_rx == DATA0_2 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1941,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_3"
            },
            {
              "condition": "state_rx == DATA0_3 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1948,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_3"
            },
            {
              "condition": "state_rx == DATA0_3 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1952,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_4"
            },
            {
              "condition": "state_rx == DATA0_4 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1959,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_4"
            },
            {
              "condition": "state_rx == DATA0_4 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1963,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_5"
            },
            {
              "condition": "state_rx == DATA0_5 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1970,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_5"
            },
            {
              "condition": "state_rx == DATA0_5 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1974,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_6"
            },
            {
              "condition": "state_rx == DATA0_6 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1981,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_6"
            },
            {
              "condition": "state_rx == DATA0_6 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1985,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_7"
            },
            {
              "condition": "state_rx == DATA0_7 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 1992,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_7"
            },
            {
              "condition": "state_rx == DATA0_7 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 1996,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_8"
            },
            {
              "condition": "state_rx == DATA0_8 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2003,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_8"
            },
            {
              "condition": "state_rx == DATA0_8 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2007,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_DATA0_1"
            },
            {
              "condition": "state_rx == RESPONSE_DATA0_1 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2014,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_DATA0_1"
            },
            {
              "condition": "state_rx == RESPONSE_DATA0_1 && !((count_receive_data != DATA_CONFIG_REG[13:2])) && (RESPONSE == 1'b0)",
              "line": 2018,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_rx == RESPONSE_DATA0_1 && !((count_receive_data != DATA_CONFIG_REG[13:2])) && !((RESPONSE == 1'b0)) && (RESPONSE == 1'b1)",
              "line": 2022,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "NACK"
            },
            {
              "condition": "state_rx == DATA1_1 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2029,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_1"
            },
            {
              "condition": "state_rx == DATA1_1 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2033,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_2"
            },
            {
              "condition": "state_rx == DATA1_2 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2040,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_2"
            },
            {
              "condition": "state_rx == DATA1_2 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2044,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_3"
            },
            {
              "condition": "state_rx == DATA1_3 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2051,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_3"
            },
            {
              "condition": "state_rx == DATA1_3 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2055,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_4"
            },
            {
              "condition": "state_rx == DATA1_4 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2062,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_4"
            },
            {
              "condition": "state_rx == DATA1_4 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2066,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_5"
            },
            {
              "condition": "state_rx == DATA1_5 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2073,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_5"
            },
            {
              "condition": "state_rx == DATA1_5 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2077,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_6"
            },
            {
              "condition": "state_rx == DATA1_6 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2084,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_6"
            },
            {
              "condition": "state_rx == DATA1_6 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2088,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_7"
            },
            {
              "condition": "state_rx == DATA1_7 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2095,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_7"
            },
            {
              "condition": "state_rx == DATA1_7 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2099,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_8"
            },
            {
              "condition": "state_rx == DATA1_8 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2106,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_8"
            },
            {
              "condition": "state_rx == DATA1_8 && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2110,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_DATA1_1"
            },
            {
              "condition": "state_rx == RESPONSE_DATA1_1 && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2117,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "RESPONSE_DATA0_1"
            },
            {
              "condition": "state_rx == RESPONSE_DATA1_1 && !((count_receive_data != DATA_CONFIG_REG[13:2])) && (RESPONSE == 1'b0)",
              "line": 2121,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_rx == RESPONSE_DATA1_1 && !((count_receive_data != DATA_CONFIG_REG[13:2])) && !((RESPONSE == 1'b0)) && (RESPONSE == 1'b1)",
              "line": 2125,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "NACK"
            },
            {
              "condition": "state_rx == DELAY_BYTES && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2132,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DELAY_BYTES"
            },
            {
              "condition": "state_rx == DELAY_BYTES && !((count_receive_data != DATA_CONFIG_REG[13:2])) && (count_rx == 2'd0)",
              "line": 2138,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "ADDRESS_1"
            },
            {
              "condition": "state_rx == DELAY_BYTES && !((count_receive_data != DATA_CONFIG_REG[13:2])) && !((count_rx == 2'd0)) && (count_rx == 2'd1)",
              "line": 2142,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA0_1"
            },
            {
              "condition": "state_rx == DELAY_BYTES && !((count_receive_data != DATA_CONFIG_REG[13:2])) && !((count_rx == 2'd0)) && !((count_rx == 2'd1)) && (count_rx == 2'd2)",
              "line": 2146,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "DATA1_1"
            },
            {
              "condition": "state_rx == DELAY_BYTES && !((count_receive_data != DATA_CONFIG_REG[13:2])) && !((count_rx == 2'd0)) && !((count_rx == 2'd1)) && !((count_rx == 2'd2)) && (count_rx == 2'd3)",
              "line": 2150,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "STOP"
            },
            {
              "condition": "state_rx == STOP && (count_receive_data != DATA_CONFIG_REG[13:2])",
              "line": 2158,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "STOP"
            },
            {
              "condition": "state_rx == STOP && !((count_receive_data != DATA_CONFIG_REG[13:2]))",
              "line": 2162,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "IDLE"
            },
            {
              "condition": "(!(state_rx == IDLE) && !(state_rx == START) && !(state_rx == CONTROLIN_1) && !(state_rx == CONTROLIN_2) && !(state_rx == CONTROLIN_3) && !(state_rx == CONTROLIN_4) && !(state_rx == CONTROLIN_5) && !(state_rx == CONTROLIN_6) && !(state_rx == CONTROLIN_7) && !(state_rx == CONTROLIN_8) && !(state_rx == RESPONSE_CIN) && !(state_rx == ADDRESS_1) && !(state_rx == ADDRESS_2) && !(state_rx == ADDRESS_3) && !(state_rx == ADDRESS_4) && !(state_rx == ADDRESS_5) && !(state_rx == ADDRESS_6) && !(state_rx == ADDRESS_7) && !(state_rx == ADDRESS_8) && !(state_rx == RESPONSE_ADDRESS) && !(state_rx == DATA0_1) && !(state_rx == DATA0_2) && !(state_rx == DATA0_3) && !(state_rx == DATA0_4) && !(state_rx == DATA0_5) && !(state_rx == DATA0_6) && !(state_rx == DATA0_7) && !(state_rx == DATA0_8) && !(state_rx == RESPONSE_DATA0_1) && !(state_rx == DATA1_1) && !(state_rx == DATA1_2) && !(state_rx == DATA1_3) && !(state_rx == DATA1_4) && !(state_rx == DATA1_5) && !(state_rx == DATA1_6) && !(state_rx == DATA1_7) && !(state_rx == DATA1_8) && !(state_rx == RESPONSE_DATA1_1) && !(state_rx == DELAY_BYTES) && !(state_rx == STOP))",
              "line": 2167,
              "logic_type": "combinational",
              "assignment_type": "blocking",
              "right_expr": "IDLE"
            }
          ]
        },
        "parent_module": "module_i2c"
      },
      {
        "lineno": 2171,
        "senlist": [
          {
            "edge": "posedge",
            "sig": "PCLK"
          }
        ],
        "ast": "Always",
        "startline": 2171,
        "endline": 2783,
        "logic_type": "sequential",
        "cfg_data": {
          "count_receive_data": [
            {
              "condition": "!PRESETn",
              "line": 2175,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == IDLE && ((((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b0)) || ((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b1))",
              "line": 2192,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == IDLE && !(((((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b0)) || ((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b1)))",
              "line": 2198,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "count_receive_data"
            },
            {
              "condition": "!(!PRESETn) && state_rx == START && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2205,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == START && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2209,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_1 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2221,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_1 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2225,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_2 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2236,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_2 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2240,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_3 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2251,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_3 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2255,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_4 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2266,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_4 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2270,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_5 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2281,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_5 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2285,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_6 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2296,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_6 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2300,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_7 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2311,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_7 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2315,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_8 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2326,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_8 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2330,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == RESPONSE_CIN && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2341,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == RESPONSE_CIN && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2345,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_1 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2352,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_1 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2356,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_2 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2367,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_2 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2371,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_3 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2382,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_3 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2386,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_4 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2397,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_4 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2401,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_5 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2412,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_5 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2416,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_6 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2427,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_6 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2431,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_7 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2442,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_7 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2446,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_8 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2457,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_8 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2461,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == RESPONSE_ADDRESS && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2472,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == RESPONSE_ADDRESS && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2476,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_1 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2483,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_1 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2487,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_2 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2498,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_2 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2502,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_3 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2513,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_3 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2517,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_4 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2528,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_4 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2532,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_5 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2543,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_5 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2547,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_6 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2558,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_6 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2562,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_7 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2573,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_7 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2577,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_8 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2588,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_8 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2592,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == RESPONSE_DATA0_1 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2603,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == RESPONSE_DATA0_1 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2607,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_1 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2614,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_1 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2618,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_2 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2629,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_2 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2633,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_3 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2644,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_3 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2648,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_4 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2659,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_4 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2663,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_5 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2674,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_5 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2678,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_6 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2689,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_6 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2693,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_7 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2704,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_7 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2708,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_8 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2719,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_8 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2723,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == RESPONSE_DATA1_1 && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2734,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == RESPONSE_DATA1_1 && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2738,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DELAY_BYTES && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2745,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DELAY_BYTES && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2765,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == STOP && (count_receive_data < DATA_CONFIG_REG[13:2])",
              "line": 2772,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_receive_data + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == STOP && !((count_receive_data < DATA_CONFIG_REG[13:2]))",
              "line": 2776,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && (!(state_rx == IDLE) && !(state_rx == START) && !(state_rx == CONTROLIN_1) && !(state_rx == CONTROLIN_2) && !(state_rx == CONTROLIN_3) && !(state_rx == CONTROLIN_4) && !(state_rx == CONTROLIN_5) && !(state_rx == CONTROLIN_6) && !(state_rx == CONTROLIN_7) && !(state_rx == CONTROLIN_8) && !(state_rx == RESPONSE_CIN) && !(state_rx == ADDRESS_1) && !(state_rx == ADDRESS_2) && !(state_rx == ADDRESS_3) && !(state_rx == ADDRESS_4) && !(state_rx == ADDRESS_5) && !(state_rx == ADDRESS_6) && !(state_rx == ADDRESS_7) && !(state_rx == ADDRESS_8) && !(state_rx == RESPONSE_ADDRESS) && !(state_rx == DATA0_1) && !(state_rx == DATA0_2) && !(state_rx == DATA0_3) && !(state_rx == DATA0_4) && !(state_rx == DATA0_5) && !(state_rx == DATA0_6) && !(state_rx == DATA0_7) && !(state_rx == DATA0_8) && !(state_rx == RESPONSE_DATA0_1) && !(state_rx == DATA1_1) && !(state_rx == DATA1_2) && !(state_rx == DATA1_3) && !(state_rx == DATA1_4) && !(state_rx == DATA1_5) && !(state_rx == DATA1_6) && !(state_rx == DATA1_7) && !(state_rx == DATA1_8) && !(state_rx == RESPONSE_DATA1_1) && !(state_rx == DELAY_BYTES) && !(state_rx == STOP))",
              "line": 2783,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd4095"
            }
          ],
          "state_rx": [
            {
              "condition": "!PRESETn",
              "line": 2176,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "IDLE"
            },
            {
              "condition": "!(!PRESETn)",
              "line": 2184,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "next_state_rx"
            }
          ],
          "SDA_OUT_RX": [
            {
              "condition": "!PRESETn",
              "line": 2177,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == IDLE && ((((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b0)) || ((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b1))",
              "line": 2190,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            },
            {
              "condition": "!(!PRESETn) && state_rx == IDLE && !(((((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b0)) || ((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b1)))",
              "line": 2196,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA_OUT_RX"
            }
          ],
          "fifo_rx_wr_en": [
            {
              "condition": "!PRESETn",
              "line": 2178,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == STOP",
              "line": 2778,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && (!(state_rx == IDLE) && !(state_rx == START) && !(state_rx == CONTROLIN_1) && !(state_rx == CONTROLIN_2) && !(state_rx == CONTROLIN_3) && !(state_rx == CONTROLIN_4) && !(state_rx == CONTROLIN_5) && !(state_rx == CONTROLIN_6) && !(state_rx == CONTROLIN_7) && !(state_rx == CONTROLIN_8) && !(state_rx == RESPONSE_CIN) && !(state_rx == ADDRESS_1) && !(state_rx == ADDRESS_2) && !(state_rx == ADDRESS_3) && !(state_rx == ADDRESS_4) && !(state_rx == ADDRESS_5) && !(state_rx == ADDRESS_6) && !(state_rx == ADDRESS_7) && !(state_rx == ADDRESS_8) && !(state_rx == RESPONSE_ADDRESS) && !(state_rx == DATA0_1) && !(state_rx == DATA0_2) && !(state_rx == DATA0_3) && !(state_rx == DATA0_4) && !(state_rx == DATA0_5) && !(state_rx == DATA0_6) && !(state_rx == DATA0_7) && !(state_rx == DATA0_8) && !(state_rx == RESPONSE_DATA0_1) && !(state_rx == DATA1_1) && !(state_rx == DATA1_2) && !(state_rx == DATA1_3) && !(state_rx == DATA1_4) && !(state_rx == DATA1_5) && !(state_rx == DATA1_6) && !(state_rx == DATA1_7) && !(state_rx == DATA1_8) && !(state_rx == RESPONSE_DATA1_1) && !(state_rx == DELAY_BYTES) && !(state_rx == STOP))",
              "line": 2782,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            }
          ],
          "count_rx": [
            {
              "condition": "!PRESETn",
              "line": 2179,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "2'd0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DELAY_BYTES && !((count_receive_data < DATA_CONFIG_REG[13:2])) && (count_rx == 2'd0)",
              "line": 2751,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_rx + 2'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DELAY_BYTES && !((count_receive_data < DATA_CONFIG_REG[13:2])) && !((count_rx == 2'd0)) && (count_rx == 2'd1)",
              "line": 2755,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_tx + 2'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DELAY_BYTES && !((count_receive_data < DATA_CONFIG_REG[13:2])) && !((count_rx == 2'd0)) && !((count_rx == 2'd1)) && (count_rx == 2'd2)",
              "line": 2759,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_rx + 2'd1)"
            },
            {
              "condition": "!(!PRESETn) && state_rx == DELAY_BYTES && !((count_receive_data < DATA_CONFIG_REG[13:2])) && !((count_rx == 2'd0)) && !((count_rx == 2'd1)) && !((count_rx == 2'd2)) && (count_rx == 2'd3)",
              "line": 2763,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "2'd0"
            }
          ],
          "BR_CLK_O_RX": [
            {
              "condition": "!PRESETn",
              "line": 2180,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "1'b0"
            },
            {
              "condition": "!(!PRESETn) && state_rx == IDLE && ((((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b0)) || ((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b1))",
              "line": 2191,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SCL"
            },
            {
              "condition": "!(!PRESETn) && state_rx == IDLE && !(((((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b0)) || ((fifo_rx_f_full == 1'b0) && (fifo_rx_f_empty == 1'b1))) && (DATA_CONFIG_REG[1] == 1'b1)))",
              "line": 2197,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "BR_CLK_O_RX"
            }
          ],
          "fifo_rx_data_in[0]": [
            {
              "condition": "!(!PRESETn) && state_rx == START && ((count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2213,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_1 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2229,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[1]": [
            {
              "condition": "!(!PRESETn) && state_rx == START && ((count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4)) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2214,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SCL"
            },
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_2 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2244,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[2]": [
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_3 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2259,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[3]": [
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_4 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2274,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[4]": [
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_5 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2289,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[5]": [
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_6 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2304,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[6]": [
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_7 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2319,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[7]": [
            {
              "condition": "!(!PRESETn) && state_rx == CONTROLIN_8 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2334,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[8]": [
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_1 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2360,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[9]": [
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_2 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2375,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[10]": [
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_3 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2390,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[11]": [
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_4 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2405,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[12]": [
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_5 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2420,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[13]": [
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_6 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2435,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[14]": [
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_7 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2450,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[15]": [
            {
              "condition": "!(!PRESETn) && state_rx == ADDRESS_8 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2465,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[16]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_1 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2491,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[17]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_2 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2506,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[18]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_3 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2521,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[19]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_4 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2536,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[20]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_5 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2551,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[21]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_6 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2566,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[22]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_7 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2581,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[23]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA0_8 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2596,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[24]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_1 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2622,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[25]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_2 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2637,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[26]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_3 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2652,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[27]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_4 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2667,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[28]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_5 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2682,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[29]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_6 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2697,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[30]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_7 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2712,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ],
          "fifo_rx_data_in[31]": [
            {
              "condition": "!(!PRESETn) && state_rx == DATA1_8 && (((SCL == 1'b1) && (count_receive_data >= (DATA_CONFIG_REG[13:2] / 12'd4))) && (count_receive_data < ((DATA_CONFIG_REG[13:2] - (DATA_CONFIG_REG[13:2] / 12'd4)) - 12'd1)))",
              "line": 2727,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "SDA"
            }
          ]
        },
        "parent_module": "module_i2c"
      },
      {
        "lineno": 2788,
        "senlist": [
          {
            "edge": "posedge",
            "sig": "PCLK"
          }
        ],
        "ast": "Always",
        "startline": 2788,
        "endline": 2803,
        "logic_type": "sequential",
        "cfg_data": {
          "count_timeout": [
            {
              "condition": "!PRESETn",
              "line": 2792,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            },
            {
              "condition": "!(!PRESETn) && ((count_timeout <= TIMEOUT_TX) && (state_tx == IDLE)) && ((SDA == 1'b0) && (SCL == 1'b0))",
              "line": 2799,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "(count_timeout + 12'd1)"
            },
            {
              "condition": "!(!PRESETn) && !(((count_timeout <= TIMEOUT_TX) && (state_tx == IDLE)))",
              "line": 2803,
              "logic_type": "sequential",
              "assignment_type": "non-blocking",
              "right_expr": "12'd0"
            }
          ]
        },
        "parent_module": "module_i2c"
      }
    ],
    "initial_blocks": [],
    "dataflow": []
  }
}